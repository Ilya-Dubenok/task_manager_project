version: '3.5'
services:
  db:
    build: postgresql
    image: taskmanager_postgresql:1.0.0
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    networks:
      - taskmanager_ntwrk
  pgadmin:
    build: pgadmin
    image: taskmanager_pgadmin:1.0.0
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "82:80"
    networks:
      - taskmanager_ntwrk
  swagger-ui:
    build: swagger-ui
    image: taskmanager_swagger-ui:1.0.0
    ports:
      - "81:8080"
    networks:
      - taskmanager_ntwrk

  zookeeper:
    image: confluentinc/cp-zookeeper
    ports:
      - "2181:2181"
    networks:
      - taskmanager_ntwrk
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    depends_on:
      - zookeeper
    image: confluentinc/cp-kafka
    ports:
      - "9092:9092"
      - "19092:19092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,CONNECTIONS_FROM_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "AuditInfo:1:1"
    networks:
      - taskmanager_ntwrk

  user-service:
    depends_on:
    - db
    - kafka
    build: user-service
    image: taskmanager_user-service:1.0.0
    networks:
      - taskmanager_ntwrk
    environment:
      spring.datasource.url: jdbc:postgresql://db:5432/user_service?ApplicationName=User_Service
      spring.datasource.username: root
      spring.datasource.password: root
      spring.kafka.bootstrap-servers: kafka:9092
      app.network.user_service.address: user-service:8080
      app.network.audit_service.address: audit-service:8080
      app.network.notification_service.address: notification-service:8080
    volumes:
      - ./filebeat/logs/user-service:/logs

  audit-service:
    depends_on:
      - db
      - kafka
    build: audit-service
    image: taskmanager_audit-service:1.0.0
    networks:
      - taskmanager_ntwrk
    environment:
      spring.datasource.url: jdbc:postgresql://db:5432/audit_service?ApplicationName=Audit_Service
      spring.datasource.username: root
      spring.datasource.password: root
      spring.kafka.bootstrap-servers: kafka:9092
      app.network.user_service.address: user-service:8080

  task-service:
    depends_on:
      - db
    build: task-service
    image: taskmanager_task-service:1.0.0
    networks:
      - taskmanager_ntwrk
    environment:
      spring.datasource.url: jdbc:postgresql://db:5432/task_service?ApplicationName=Task_Service
      spring.datasource.username: root
      spring.datasource.password: root
      app.network.user_service.address: user-service:8080
    volumes:
      - ./filebeat/logs/task-service:/logs

  report-service:
    depends_on:
      - db
      - minio
    build: report-service
    image: taskmanager_report-service:1.0.0
    networks:
      - taskmanager_ntwrk
    environment:
      spring.datasource.url: jdbc:postgresql://db:5432/report_service?ApplicationName=Report_Service
      spring.datasource.username: root
      spring.datasource.password: root
      app.network.user_service.address: user-service:8080
      app.network.audit_service.address: audit-service:8080
      app.network.minio.host: minio:9000

  minio:
    image: bitnami/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio_user
      MINIO_ROOT_PASSWORD: minio_password
    networks:
      - taskmanager_ntwrk

  notification-service:
    build: notification-service
    image: taskmanager_notification-service:1.0.0
    networks:
      - taskmanager_ntwrk


  proxy:
    build: proxy
    image: taskmanager_proxy:1.0.0
    ports:
      - "80:80"
    networks:
      - taskmanager_ntwrk

  elasticsearch:
    image: elasticsearch:8.10.2
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "discovery.type=single-node"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - elastic_ntwrk

  kibana:
    image: kibana:8.10.2
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    networks:
      - elastic_ntwrk

  logstash:
    image: logstash:8.10.2
    depends_on:
      - elasticsearch
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
        - "5044:5044"
        - "5000:5000/tcp"
        - "5000:5000/udp"
        - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elastic_ntwrk

  filebeat:
    image: elastic/filebeat:8.10.2
    depends_on:
      - logstash
    volumes:
      - ./filebeat/config/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./filebeat/logs:/logs/
    command:
      - "-environment"
      - "container"
      - "--strict.perms=false"
    networks:
      - elastic_ntwrk





networks:
    taskmanager_ntwrk:
      name: taskmanager_ntwrk
    elastic_ntwrk:
      name: elastic_ntwrk